
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.gebish:geb-gradle:0.10.0'
  }
}

project.buildDir = 'target'
description = "Example project for automated Grails testing with Sauce Labs"

def browsers = [
    [ browserName: 'chrome',            platform: 'Windows 7',   version:  '36' ],
    [ browserName: 'firefox',           platform: 'Windows 7',   version:  '31' ],
    [ browserName: 'firefox',           platform: 'OS X 10.10',  version:  '33' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '8' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '9' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:  '10' ],
    [ browserName: 'internet explorer', platform: 'Windows 8.1', version:  '11' ],
    [ browserName: 'iPhone',            platform:'OS X 10.9',    version: '7.1', 'device-orientation': 'portrait']
]

apply plugin: "project-report"
apply plugin: "geb-saucelabs"

repositories {
  mavenCentral()
  maven { url "http://repository-saucelabs.forge.cloudbees.com/release" }
}

dependencies {
  sauceConnect "com.saucelabs:ci-sauce:1.81"
}

sauceLabs {
  account {
    username = System.getenv("SAUCE_LABS_USER")
    accessKey = System.getenv("SAUCE_LABS_ACCESS_PASSWORD")
  }
  connect {
    port = 4445
  }
}

/**
 * Create a new Grails functional ant task for the specified browser.
 * @param browserSpec map of properties sent to Sauce Labs
 */
ext {
  grailsFunctionalServerPort = 8080
}
def grailsFunctionalAntTask(def browserSpec) {
  def browser = browserSpec.collect { key, value -> "${key}=${value}" }.join(',')
  def name = browserSpec.collect { key, value -> value }.join('_').replaceAll(/\s+/, '')
  ant.exec(executable: "grails") {
    ant.arg(value: "-Dgrails.nofork=true")
    ant.arg(value: "\"-Dgeb.saucelabs.browser=${browser}\"")
    ant.arg(value: "\"-Dgeb.build.reportsDir=target/test-reports/geb/${name}\"")
    ant.arg(value: "-Dgrails.server.port=${grailsFunctionalServerPort}")
    ant.arg(value: "-Dserver.port=${grailsFunctionalServerPort}")
    ant.arg(value: "test-app")
    ant.arg(value: "functional:")
  }
  grailsFunctionalServerPort++
}

/**
 * Create a new Grails functional test for the specified browser.
 * @param browserSpec map of properties sent to Sauce Labs
 */
def grailsFunctionalTest(def browserSpec) {
  def name = browserSpec.collect { key, value -> value }.join('_').replaceAll(/\s+/, '')

  def t = task "grailsFuncTest_${name}" << {
    grailsFunctionalAntTask(browserSpec)
  }

  t.dependsOn 'openSauceTunnelInBackground'
  t.finalizedBy 'closeSauceTunnel'
}

browsers.each { browserSpec ->
  grailsFunctionalTest(browserSpec)
}

task functionalTests << {
  ant.parallel(threadsPerProcessor: 1, failonany: true) {
    browsers.each { browserSpec ->
      grailsFunctionalAntTask(browserSpec)
    }
  }
}
functionalTests.dependsOn 'openSauceTunnelInBackground'
functionalTests.finalizedBy 'closeSauceTunnel'
