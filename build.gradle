import org.grails.gradle.plugin.tasks.GrailsTask
import org.grails.gradle.plugin.tasks.GrailsTestTask

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.gebish:geb-gradle:0.10.0'
    classpath 'org.grails:grails-gradle-plugin:2.1.1'
  }
}

project.buildDir = 'target'
project.version = '0.1'
description = "Example project for automated Grails testing with Sauce Labs"

apply plugin: "project-report"
apply plugin: "geb-saucelabs"
apply plugin: "grails"
apply plugin: "idea"

grails {
  grailsVersion = '2.4.4'
  groovyVersion = '2.3.6'
  springLoadedVersion = '1.2.1.RELEASE'
}

def gebVersion = "0.10.0"
def seleniumVersion = "2.42.2"

/** Get hostname appropriate for the Sauce Connect tunnel. */
def getHostname() {
  def myhostname = "hostname".execute().text.trim()
  // .local is not available from the tunnel
  if (myhostname && !myhostname.endsWith(".local")) {
    return myhostname
  }

  // check /etc/hosts for localhost alias
  myhostname = "localhost"
  file("/etc/hosts").eachLine { line ->
    def tokens = line.split(/\s+/)
    if (tokens[0] == "127.0.0.1") {
      for(int i = 1; i < tokens.length; i++) {
        if (!tokens[i].contains("localhost")) {
          myhostname = tokens[i]
        }
      }
    }
  }

  // fallback to localhost
  return myhostname
}

ext {
  hostname = getHostname()
}

repositories {
  mavenCentral()
  grails.central()
  maven { url "http://repository-saucelabs.forge.cloudbees.com/release" }
}

dependencies {
  sauceConnect("com.saucelabs:ci-sauce:1.84") {
    exclude module: 'sebuilder-interpreter'
  }
  // This is marked as provided in the pom for some reason
  sauceConnect "commons-io:commons-io:1.4"

  test "org.grails:grails-datastore-test-support:1.0-grails-2.4"
  test "org.gebish:geb-spock:$gebVersion"
  test "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
  test "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
  test "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
  test "org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion"
  test( "com.github.detro:phantomjsdriver:1.2.0" ) {
    transitive = false
  }

  // plugins for the build system only
  bootstrap "org.grails.plugins:tomcat:7.0.55"

  // plugins for the compile step
  compile "org.grails.plugins:scaffolding:2.1.2"
  compile 'org.grails.plugins:cache:1.1.7'
  compile "org.grails.plugins:asset-pipeline:1.9.9"

  // plugins needed at runtime but not for compilation
  runtime("org.grails.plugins:hibernate4:4.3.5.5") { // or ":hibernate:3.6.10.17"
    exclude module: 'xml-apis'
  }
  runtime "org.grails.plugins:database-migration:1.4.0"
  runtime "org.grails.plugins:jquery:1.11.1"

  test "org.grails.plugins:geb:$gebVersion"
  test "org.grails.plugins:geb-saucelabs:0.1"
  test("org.grails.plugins:code-coverage:2.0.3-2") {
    exclude module: 'xml-apis'
    exclude group: 'xerces'
  }
}

sauceLabs {
  account {
    username = System.getenv("SAUCE_LABS_USER")
    accessKey = System.getenv("SAUCE_LABS_ACCESS_PASSWORD")
  }
  connect {
    port = 4445
    if (project.hostname != "localhost") {
      additionalOptions << '-t' << project.hostname
    }
  }
}

task functionalTests {
  group "Sauce Test"
}

/**
 * Create a new Grails functional test for the specified browser.
 * @param browserSpec map of properties sent to Sauce Labs
 */
ext {
  grailsFunctionalServerPort = 8080
}
def grailsFunctionalTest(def browserSpec) {
  def browser = browserSpec.collect { key, value -> "${key}=${value}" }.join(',')
  def name = browserSpec.collect { key, value -> value }.join('_').replaceAll(/\s+/, '')
  def output = "target/test-reports/geb/${name}"

  task "grailsFuncTest_${name}"(type: GrailsTestTask) {
    group "Sauce Test"
    testResultsDir = file(output)
    phases = ['functional:']
    jvmOptions.with {
      systemProperty "grails.nofork", "true"
      systemProperty "geb.saucelabs.browser", browser
      systemProperty "geb.build.reportsDir", output
      systemProperty "grails.server.port", grailsFunctionalServerPort
      systemProperty "server.port", grailsFunctionalServerPort
      systemProperty "grails.server.host", hostname
    }
    dependsOn 'openSauceTunnelInBackground'
    finalizedBy 'closeSauceTunnel'
  }
  functionalTests.dependsOn "grailsFuncTest_${name}"
  grailsFunctionalServerPort++
}

def browsers = [
    [ browserName: 'chrome',            platform: 'Windows 7',   version:  '36' ],
    [ browserName: 'firefox',           platform: 'Windows 7',   version:  '31' ],
    [ browserName: 'firefox',           platform: 'OS X 10.10',  version:  '33' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '8' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '9' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:  '10' ],
    [ browserName: 'internet explorer', platform: 'Windows 8.1', version:  '11' ],
    [ browserName: 'iPhone',            platform:'OS X 10.9',    version: '7.1', 'device-orientation': 'portrait']
]

browsers.each { browserSpec ->
  grailsFunctionalTest(browserSpec)
}

project.tasks.withType(GrailsTask) {
  captureOutputToInfo = true
}
